"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NamedVariable = exports.Variable = void 0;
const PropertyRef_1 = require("../expressions/PropertyRef");
/** Represents a variable */
class Variable {
    constructor(prefix = "var", id) {
        this.prefix = prefix;
        this.id = id;
    }
    getCypher(env) {
        const id = env.getVariableId(this);
        return `${id}`;
    }
    property(path) {
        return new PropertyRef_1.PropertyRef(this, path);
    }
}
exports.Variable = Variable;
/** For compatibility reasons, represents a plain string variable */
class NamedVariable extends Variable {
    constructor(name) {
        super("", name);
    }
}
exports.NamedVariable = NamedVariable;
//# sourceMappingURL=Variable.js.map