import { ClauseMixin } from "./ClauseMixin";
import { Where } from "../sub-clauses/Where";
import { Variable } from "../../variables/Variable";
import type { Predicate } from "../../types";
export declare abstract class WithWhere extends ClauseMixin {
    protected whereSubClause: Where | undefined;
    where(input: Predicate): this;
    where(target: Variable, params: Record<string, Variable>): this;
    and(input: Predicate): this;
    and(target: Variable, params: Record<string, Variable>): this;
    private updateOrCreateWhereClause;
    private createWhereInput;
    /** Transforms a simple input into an operation sub tree */
    private variableAndObjectToOperation;
}
//# sourceMappingURL=WithWhere.d.ts.map