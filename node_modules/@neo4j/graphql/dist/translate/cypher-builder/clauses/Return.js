"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Return = void 0;
const WithOrder_1 = require("./mixins/WithOrder");
const apply_mixin_1 = require("./utils/apply-mixin");
const Projection_1 = require("./sub-clauses/Projection");
const Clause_1 = require("./Clause");
const utils_1 = require("../utils/utils");
class Return extends Clause_1.Clause {
    constructor(...columns) {
        super();
        this.isDistinct = false;
        this.projection = new Projection_1.Projection(columns);
    }
    addColumns(...columns) {
        this.projection.addColumns(columns);
        return this;
    }
    distinct() {
        this.isDistinct = true;
        return this;
    }
    getCypher(env) {
        const projectionStr = this.projection.getCypher(env);
        const orderStr = (0, utils_1.compileCypherIfExists)(this.orderByStatement, env, { prefix: "\n" });
        const distinctStr = this.isDistinct ? " DISTINCT" : "";
        return `RETURN${distinctStr} ${projectionStr}${orderStr}`;
    }
}
exports.Return = Return;
(0, apply_mixin_1.applyMixins)(Return, [WithOrder_1.WithOrder]);
//# sourceMappingURL=Return.js.map